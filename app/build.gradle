/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
    id 'org.graalvm.buildtools.native' version '0.10.2'
    id "me.champeau.jmh" version "0.7.2"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

shadowJar {
    mergeServiceFiles()
}

dependencies {
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.0'

    // https://mvnrepository.com/artifact/net.jqwik/jqwik
    testImplementation 'net.jqwik:jqwik:1.9.0'
    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testImplementation 'org.assertj:assertj-core:3.26.3'

    // https://mvnrepository.com/artifact/edu.princeton.cs/algs4
    implementation files('deps/algs4.jar')


    jmh 'org.openjdk.jmh:jmh-core:1.37'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

application {
    mainClass = project.hasProperty('mainClass') ? project.mainClass : 'org.algobench.app.Main'
}

jar {
    manifest {
        attributes 'Main-Class': 'org.algobench.app.Main'
    }
}

test {
    useJUnitPlatform {
        includeEngines 'jqwik'
    }
    setMaxParallelForks(10)
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

jmh {
    resultFormat = 'CSV'
    threads = 8
    fork = 1
    includes = ['^.*Exponent.*$']
    verbosity = 'EXTRA'
}